version: '3.8'

services:
  nginx:
    build: ./nginx
    container_name: rfid_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      frontend:
        condition: service_healthy
      backend-api:
        condition: service_healthy
    networks:
      - rfid-net
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mysql:
    image: mysql:8.0
    container_name: rfid_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: rfid_db
      MYSQL_USER: rfid
      MYSQL_PASSWORD: rfidpass
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    volumes:
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql_data:/var/lib/mysql
    # Remove port mapping as it's only needed internally
    expose:
      - "3306:3306"
    networks:
      - rfid-net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5

  mosquitto:
    image: eclipse-mosquitto:2
    container_name: mqtt_broker
    restart: unless-stopped
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - mosquitto_data:/mosquitto/data
      - mosquitto_log:/mosquitto/log
    # Keep MQTT port exposed for external MQTT clients
    ports:
      - "1883:1883"
    # WebSocket port only exposed internally
    expose:
      - "9001"
    networks:
      - rfid-net
    healthcheck:
      test: ["CMD-SHELL", "timeout 5 mosquitto_sub -t '$$SYS/#' -C 1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  mqtt-subscriber:
    build: ./mqtt-python-server
    container_name: mqtt_client
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
      mosquitto:
        condition: service_healthy
    environment:
      DB_HOST: mysql
      DB_USER: rfid
      DB_PASSWORD: rfidpass
      DB_NAME: rfid_db
      MQTT_BROKER: mosquitto
      PYTHONUNBUFFERED: 1
    networks:
      - rfid-net
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    expose:
      - "8081"  # Health check port

  backend-api:
    build: ./backend-api
    container_name: nest_api
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    # Remove port mapping as it's only needed internally
    expose:
      - "5000"
    environment:
      DB_HOST: mysql
      DB_USER: rfid
      DB_PASSWORD: rfidpass
      DB_NAME: rfid_db
      PORT: 5000
      NODE_ENV: production
    networks:
      - rfid-net
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  frontend:
    build: ./frontend
    container_name: nextjs_app
    restart: unless-stopped
    depends_on:
      backend-api:
        condition: service_healthy
    # Remove port mapping as it's only needed internally
    expose:
      - "3000"
    environment:
      NEXT_PUBLIC_API_URL: "/api"  # Updated to use Nginx path
      NODE_ENV: production
    networks:
      - rfid-net
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

volumes:
  mysql_data:
  mosquitto_data:
  mosquitto_log:

networks:
  rfid-net:
    driver: bridge
